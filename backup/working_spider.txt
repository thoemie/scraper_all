# This is telekom_spider.py in //.../myScrapyProject/myScrapyProject/spiders
import scrapy
from urllib.parse import urljoin

class TelekomSpider(scrapy.Spider):
    name = "plans"
    start_urls = [
        'https://www.telekom.de/unterwegs/tarife-und-optionen/smartphone-tarife'
    ]



    def parse(self, response):
        # This selector matches the class "t7" which is used for the Link to the "Tarifdetails" and extracts the href-Attribute
        plans = response.css(".t7::attr(href)").extract()
        
        for p in plans:
            # Somehow joins / concatenates each entry in plans (which are relative paths) together with the first part of the URL and returns the whole URL
            url = urljoin(response.url, p)
            yield scrapy.Request(url, callback=self.parse_plan)

    
    def parse_plan(self, response):
                
        # this is the container for the HTML-Table with the detailed pricing information
        for info in response.css(".tariff-details.container-fixed"):
            yield {
                # Selectors match the second bold text nodes in HTML-Table-Data-Cell-nodes in the class "row", that are in the table, whose row contains the provided string (like "Monatlich"). Or the like. Fuck Selectors.
                'Tarif' : info.css(".page-title::text").extract(),
                'Grundpreis' : info.xpath('//*[@class="row"]/table//tr[contains(., "Monatlich")]/td[2]/strong/text()').extract(),
                'Bereitstellungspreis' : info.xpath('//*[@class="row"]/table//tr[contains(., "Einmalig")]/td[2]/strong/text()').extract(),
                'Dauer' : info.xpath('//*[@class="row"]/table//tr[contains(., "Dauer")]/td[2]/strong/text()').extract(),
                'MMS' : info.xpath('//*[@class="row"]/table//tr[contains(., "MMS")]/td[2]/strong/text()').extract(),
                'Datennutzung' : info.xpath('//*[@class="row"]/table//tr[contains(., "Datennutzung")]/td[2]/strong/text()').extract(),
                'Geschwindigkeit Download' : info.xpath('//*[@class="row"]/table//tr[contains(., "Download")]/td[2]/strong/text()').extract(),
                'Geschwindigkeit Upload' : info.xpath('//*[@class="row"]/table//tr[contains(., "Upload")]/td[2]/strong/text()').extract(),
                'Datenvolumen' : info.xpath('//*[@class="row"]/table//tr[contains(., "Highspeed-Volumen")]/td[2]/strong/text()').extract(),

            }
        
